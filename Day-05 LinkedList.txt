1. reverse a ll

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* curr= head;
        ListNode* prev= NULL;
        while(curr!=NULL){
            ListNode* next= curr->next;
            curr->next = prev;
            prev= curr;
            curr= next;
        }
        return prev;
    }
};

2. middle of ll

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* fast= head;
        ListNode *slow = head;
        while(fast!=NULL && fast->next != NULL){
            fast = fast->next->next;
            slow= slow->next;
        }
        return slow;
    }
};
