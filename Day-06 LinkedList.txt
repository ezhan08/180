1. Intersection point of ll

class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(!headA || !headB) return NULL;
        ListNode* a= headA;
        ListNode* b= headB;
        while(a!=b){
            a=a==NULL?a=headB:a->next;
            b=b==NULL?b=headA:b->next;
        }
        return a;
    }
};

2. cycle/loop in a ll

class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* fast = head, *slow = head;
        while(fast!= NULL && fast->next != NULL){
            fast = fast->next->next;
            slow = slow->next;
            if ( fast == slow) return true;
        }
        return false;
    }
};
