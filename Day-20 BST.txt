1. Populate next right pointers

class Solution {
public:
    Node* connect(Node* root) {
        if(!root) return root;
        Node* prev = root;
        Node* curr = NULL;
        while(prev->left){
            curr = prev;
            while(curr){
                curr->left->next = curr->right;
                if(curr->next)curr->right->next = curr->next->left;
                curr= curr->next;
            }
            prev = prev->left;
        }
        return root;
    }
};

2. search in bst

class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
         while(root != NULL && root->val != val){
            root = val<root->val? root->left:root->right;
        }
        return root;
    }
};
